Error -------------------------------------------------------------------------------- CanvasRenderingContext2D.js:11:16

Cannot call `ctx.moveTo` with `'0'` bound to `x` because string [1] is incompatible with number [2].

   CanvasRenderingContext2D.js:11:16
     11|     ctx.moveTo('0', '1');  // error: should be numbers
                        ^^^ [1]

References:
   <BUILTINS>/dom.js:1549:13
   1549|   moveTo(x: number, y: number): void;
                     ^^^^^^ [2]


Error -------------------------------------------------------------------------------- CanvasRenderingContext2D.js:11:21

Cannot call `ctx.moveTo` with `'1'` bound to `y` because string [1] is incompatible with number [2].

   CanvasRenderingContext2D.js:11:21
     11|     ctx.moveTo('0', '1');  // error: should be numbers
                             ^^^ [1]

References:
   <BUILTINS>/dom.js:1549:24
   1549|   moveTo(x: number, y: number): void;
                                ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- Element.js:14:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with enum [2]
in property `behavior`.

   Element.js:14:28
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^^^^

References:
   Element.js:14:40
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                                ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1163:49
   1163|   scrollIntoView(arg?: (boolean | { behavior?: ('auto' | 'instant' | 'smooth'), block?: ('start' | 'end') })): void;
                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- Element.js:15:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with enum [2]
in property `block`.

   Element.js:15:28
     15|     element.scrollIntoView({ block: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^

References:
   Element.js:15:37
     15|     element.scrollIntoView({ block: 'invalid' });
                                             ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1163:90
   1163|   scrollIntoView(arg?: (boolean | { behavior?: ('auto' | 'instant' | 'smooth'), block?: ('start' | 'end') })): void;
                                                                                                  ^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- Element.js:16:28

Cannot call `element.scrollIntoView` with `1` bound to `arg` because number [1] is incompatible with boolean [2].

   Element.js:16:28
     16|     element.scrollIntoView(1);
                                    ^ [1]

References:
   <BUILTINS>/dom.js:1163:25
   1163|   scrollIntoView(arg?: (boolean | { behavior?: ('auto' | 'instant' | 'smooth'), block?: ('start' | 'end') })): void;
                                 ^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:14:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with enum [2]
in property `behavior`.

   HTMLElement.js:14:28
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:14:40
     14|     element.scrollIntoView({ behavior: 'invalid' });
                                                ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1163:49
   1163|   scrollIntoView(arg?: (boolean | { behavior?: ('auto' | 'instant' | 'smooth'), block?: ('start' | 'end') })): void;
                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:15:28

Cannot call `element.scrollIntoView` with object literal bound to `arg` because string [1] is incompatible with enum [2]
in property `block`.

   HTMLElement.js:15:28
     15|     element.scrollIntoView({ block: 'invalid' });
                                    ^^^^^^^^^^^^^^^^^^^^

References:
   HTMLElement.js:15:37
     15|     element.scrollIntoView({ block: 'invalid' });
                                             ^^^^^^^^^ [1]
   <BUILTINS>/dom.js:1163:90
   1163|   scrollIntoView(arg?: (boolean | { behavior?: ('auto' | 'instant' | 'smooth'), block?: ('start' | 'end') })): void;
                                                                                                  ^^^^^^^^^^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- HTMLElement.js:16:28

Cannot call `element.scrollIntoView` with `1` bound to `arg` because number [1] is incompatible with boolean [2].

   HTMLElement.js:16:28
     16|     element.scrollIntoView(1);
                                    ^ [1]

References:
   <BUILTINS>/dom.js:1163:25
   1163|   scrollIntoView(arg?: (boolean | { behavior?: ('auto' | 'instant' | 'smooth'), block?: ('start' | 'end') })): void;
                                 ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ HTMLFormElement.js:23:1

Cannot get `el.className` because property `className` is missing in null [1].

   HTMLFormElement.js:23:1
     23| el.className // invalid
         ^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:2469:43
   2469|   [index: number | string]: HTMLElement | null;
                                                   ^^^^ [1]


Error ------------------------------------------------------------------------------------------ HTMLFormElement.js:27:1

Cannot get `el.className` because property `className` is missing in null [1].

   HTMLFormElement.js:27:1
     27| el.className // invalid
         ^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:2469:43
   2469|   [index: number | string]: HTMLElement | null;
                                                   ^^^^ [1]


Error ------------------------------------------------------------------------------------------ HTMLInputElement.js:7:5

Cannot call `el.setRangeText` because number [1] is incompatible with undefined [2].

   HTMLInputElement.js:7:5
      7|     el.setRangeText('foo', 123); // end is required
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLInputElement.js:7:28
      7|     el.setRangeText('foo', 123); // end is required
                                    ^^^ [1]
   <BUILTINS>/dom.js:2807:45
   2807|   setRangeText(replacement: string, start?: void, end?: void, selectMode?: void): void;
                                                     ^^^^ [2]


Error ----------------------------------------------------------------------------------------- HTMLInputElement.js:10:5

Cannot call `el.setRangeText` because string [1] is incompatible with enum [2].

   HTMLInputElement.js:10:5
     10|     el.setRangeText('foo', 123, 234, 'bogus'); // invalid value
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   HTMLInputElement.js:10:38
     10|     el.setRangeText('foo', 123, 234, 'bogus'); // invalid value
                                              ^^^^^^^ [1]
   <BUILTINS>/dom.js:2808:78
   2808|   setRangeText(replacement: string, start: number, end: number, selectMode?: SelectionMode): void;
                                                                                      ^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:11:1

Cannot get `form.action` because property `action` is missing in null [1].

   HTMLSelectElement.js:11:1
     11| form.action // invalid
         ^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:2861:27
   2861|   form: HTMLFormElement | null;
                                   ^^^^ [1]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:19:1

Cannot get `item.value` because property `value` is missing in null [1].

   HTMLSelectElement.js:19:1
     19| item.value // invalid
         ^^^^^^^^^^

References:
   <BUILTINS>/dom.js:2876:44
   2876|   item(index: number): HTMLOptionElement | null;
                                                    ^^^^ [1]


Error ---------------------------------------------------------------------------------------- HTMLSelectElement.js:22:1

Cannot get `item.value` because property `value` is missing in null [1].

   HTMLSelectElement.js:22:1
     22| item.value // invalid
         ^^^^^^^^^^

References:
   <BUILTINS>/dom.js:2877:48
   2877|   namedItem(name: string): HTMLOptionElement | null;
                                                        ^^^^ [1]


Error ------------------------------------------------------------------------------------------------------ URL.js:8:19

Cannot get `c.path` because property `path` is missing in `URL` [1].

   URL.js:8:19
   8| const e: string = c.path; // not correct
                        ^^^^^^

References:
   URL.js:5:11
   5| const c = new URL('/docs', 'http://flowtype.org/'); // correct
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------- eventtarget.js:9:6

Cannot call `target.attachEvent` because undefined [1] is not a function.

   eventtarget.js:9:6
     9|     (target.attachEvent('foo', listener): void); // invalid, may be undefined
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:183:17
   183|   attachEvent?: (type: string, listener: EventListener) => void;
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- eventtarget.js:16:6

Cannot call `target.detachEvent` because undefined [1] is not a function.

   eventtarget.js:16:6
    16|     (target.detachEvent('foo', listener): void); // invalid, may be undefined
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/dom.js:193:17
   193|   detachEvent?: (type: string, listener: EventListener) => void;
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------------- path2d.js:9:6

Cannot call `path.arcTo` because string [1] is incompatible with number [2].

   path2d.js:9:6
      9|     (path.arcTo(0, 0, 0, 0, 10, '20', 5): void); // invalid
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   path2d.js:9:33
      9|     (path.arcTo(0, 0, 0, 0, 10, '20', 5): void); // invalid
                                         ^^^^ [1]
   <BUILTINS>/dom.js:1418:83
   1418|   arcTo(x1: number, y1: number, x2: number, y2: number, radiusX: number, radiusY: number, rotation: number): void;
                                                                                           ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- registerElement.js:48:48

Cannot call `document.registerElement` with object literal bound to `options` because:
 - string [1] is incompatible with null [2] in the second argument of property `prototype.attributeChangedCallback`.
 - string [3] is incompatible with null [4] in the third argument of property `prototype.attributeChangedCallback`.

   registerElement.js:48:48
                                                       v
    48|     document.registerElement('custom-element', {
    49|       prototype: {
    50|         attributeChangedCallback(
    51|           localName: string,
    52|           oldVal: string, // Error: This might be null
    53|           newVal: string, // Error: This might be null
    54|           namespace: string) {}
    55|       },
    56|     });
            ^

References:
   registerElement.js:52:19
    52|           oldVal: string, // Error: This might be null
                          ^^^^^^ [1]
   <BUILTINS>/dom.js:537:26
   537|       oldAttributeValue: null,
                                 ^^^^ [2]
   registerElement.js:53:19
    53|           newVal: string, // Error: This might be null
                          ^^^^^^ [3]
   <BUILTINS>/dom.js:552:26
   552|       newAttributeValue: null,
                                 ^^^^ [4]


Error ------------------------------------------------------------------------------------------------ traversal.js:29:5

Cannot call `document.createNodeIterator` because:
 - Either object literal [1] is incompatible with `Attr` [2] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [3] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [4] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [5] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [6] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [7] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [8] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [9] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [10] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [11] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [12] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [13] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [14] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [15] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [16] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [17] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [18] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [19] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [20] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [21] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [22] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [23] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [24] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [25] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [26] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [27] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [28] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [29] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [30] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [31] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [32] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [33] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [34] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [35] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [36] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [37] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [38] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [39] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [40] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [41] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [42] in type argument `RootNodeT`.

   traversal.js:29:5
    29|     document.createNodeIterator({}); // invalid
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   traversal.js:29:33
    29|     document.createNodeIterator({}); // invalid
                                        ^^ [1]
   <BUILTINS>/dom.js:845:33
   845|   createNodeIterator<RootNodeT: Attr>(root: RootNodeT, whatToShow: 2, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Attr>;
                                        ^^^^ [2]
   <BUILTINS>/dom.js:853:33
   853|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 256, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document>;
                                        ^^^^^^^^ [3]
   <BUILTINS>/dom.js:854:33
   854|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 257, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element>;
                                        ^^^^^^^^ [4]
   <BUILTINS>/dom.js:855:33
   855|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 260, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Text>;
                                        ^^^^^^^^ [5]
   <BUILTINS>/dom.js:856:33
   856|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 261, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Text>;
                                        ^^^^^^^^ [6]
   <BUILTINS>/dom.js:857:33
   857|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 384, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Comment>;
                                        ^^^^^^^^ [7]
   <BUILTINS>/dom.js:858:33
   858|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 385, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Comment>;
                                        ^^^^^^^^ [8]
   <BUILTINS>/dom.js:859:33
   859|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 388, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Text|Comment>;
                                        ^^^^^^^^ [9]
   <BUILTINS>/dom.js:860:33
   860|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 389, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Document|Element|Text|Comment>;
                                        ^^^^^^^^ [10]
   <BUILTINS>/dom.js:861:33
   861|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 512, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType>;
                                        ^^^^^^^^ [11]
   <BUILTINS>/dom.js:862:33
   862|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 513, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element>;
                                        ^^^^^^^^ [12]
   <BUILTINS>/dom.js:863:33
   863|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 516, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Text>;
                                        ^^^^^^^^ [13]
   <BUILTINS>/dom.js:864:33
   864|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 517, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Text>;
                                        ^^^^^^^^ [14]
   <BUILTINS>/dom.js:865:33
   865|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 640, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Comment>;
                                        ^^^^^^^^ [15]
   <BUILTINS>/dom.js:866:33
   866|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 641, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Comment>;
                                        ^^^^^^^^ [16]
   <BUILTINS>/dom.js:867:33
   867|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 644, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Text|Comment>;
                                        ^^^^^^^^ [17]
   <BUILTINS>/dom.js:868:33
   868|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 645, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Element|Text|Comment>;
                                        ^^^^^^^^ [18]
   <BUILTINS>/dom.js:869:33
   869|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 768, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document>;
                                        ^^^^^^^^ [19]
   <BUILTINS>/dom.js:870:33
   870|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 769, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element>;
                                        ^^^^^^^^ [20]
   <BUILTINS>/dom.js:871:33
   871|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 772, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Text>;
                                        ^^^^^^^^ [21]
   <BUILTINS>/dom.js:872:33
   872|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 773, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Text>;
                                        ^^^^^^^^ [22]
   <BUILTINS>/dom.js:873:33
   873|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 896, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Comment>;
                                        ^^^^^^^^ [23]
   <BUILTINS>/dom.js:874:33
   874|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 897, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Comment>;
                                        ^^^^^^^^ [24]
   <BUILTINS>/dom.js:875:33
   875|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 900, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Text|Comment>;
                                        ^^^^^^^^ [25]
   <BUILTINS>/dom.js:876:33
   876|   createNodeIterator<RootNodeT: Document>(root: RootNodeT, whatToShow: 901, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentType|Document|Element|Text|Comment>;
                                        ^^^^^^^^ [26]
   <BUILTINS>/dom.js:904:33
   904|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1024, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment>;
                                        ^^^^^^^^^^^^^^^^ [27]
   <BUILTINS>/dom.js:905:33
   905|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1025, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element>;
                                        ^^^^^^^^^^^^^^^^ [28]
   <BUILTINS>/dom.js:906:33
   906|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1028, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Text>;
                                        ^^^^^^^^^^^^^^^^ [29]
   <BUILTINS>/dom.js:907:33
   907|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1029, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Text>;
                                        ^^^^^^^^^^^^^^^^ [30]
   <BUILTINS>/dom.js:908:33
   908|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1152, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Comment>;
                                        ^^^^^^^^^^^^^^^^ [31]
   <BUILTINS>/dom.js:909:33
   909|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1153, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Comment>;
                                        ^^^^^^^^^^^^^^^^ [32]
   <BUILTINS>/dom.js:910:33
   910|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1156, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Text|Comment>;
                                        ^^^^^^^^^^^^^^^^ [33]
   <BUILTINS>/dom.js:911:33
   911|   createNodeIterator<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1157, filter?: NodeFilterInterface): NodeIterator<RootNodeT, DocumentFragment|Element|Text|Comment>;
                                        ^^^^^^^^^^^^^^^^ [34]
   <BUILTINS>/dom.js:924:33
   924|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element>;
                                        ^^^^ [35]
   <BUILTINS>/dom.js:925:33
   925|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text>;
                                        ^^^^ [36]
   <BUILTINS>/dom.js:926:33
   926|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Text>;
                                        ^^^^ [37]
   <BUILTINS>/dom.js:927:33
   927|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Comment>;
                                        ^^^^ [38]
   <BUILTINS>/dom.js:928:33
   928|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Comment>;
                                        ^^^^ [39]
   <BUILTINS>/dom.js:929:33
   929|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Comment>;
                                        ^^^^ [40]
   <BUILTINS>/dom.js:930:33
   930|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Element|Comment>;
                                        ^^^^ [41]
   <BUILTINS>/dom.js:941:33
   941|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow?: number, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Node>;
                                        ^^^^ [42]


Error ------------------------------------------------------------------------------------------------ traversal.js:33:5

Cannot call `document.createTreeWalker` because:
 - Either object literal [1] is incompatible with `Attr` [2] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [3] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [4] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [5] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [6] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [7] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [8] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [9] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [10] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [11] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [12] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [13] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [14] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [15] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [16] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [17] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [18] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [19] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [20] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [21] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [22] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [23] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [24] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [25] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Document` [26] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [27] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [28] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [29] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [30] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [31] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [32] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [33] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `DocumentFragment` [34] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [35] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [36] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [37] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [38] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [39] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [40] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [41] in type argument `RootNodeT`.
 - Or object literal [1] is incompatible with `Node` [42] in type argument `RootNodeT`.

   traversal.js:33:5
    33|     document.createTreeWalker({}); // invalid
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   traversal.js:33:31
    33|     document.createTreeWalker({}); // invalid
                                      ^^ [1]
   <BUILTINS>/dom.js:846:31
   846|   createTreeWalker<RootNodeT: Attr>(root: RootNodeT, whatToShow: 2, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Attr>;
                                      ^^^^ [2]
   <BUILTINS>/dom.js:877:31
   877|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 256, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document>;
                                      ^^^^^^^^ [3]
   <BUILTINS>/dom.js:878:31
   878|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 257, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element>;
                                      ^^^^^^^^ [4]
   <BUILTINS>/dom.js:879:31
   879|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 260, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Text>;
                                      ^^^^^^^^ [5]
   <BUILTINS>/dom.js:880:31
   880|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 261, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Text>;
                                      ^^^^^^^^ [6]
   <BUILTINS>/dom.js:881:31
   881|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 384, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Comment>;
                                      ^^^^^^^^ [7]
   <BUILTINS>/dom.js:882:31
   882|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 385, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Comment>;
                                      ^^^^^^^^ [8]
   <BUILTINS>/dom.js:883:31
   883|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 388, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Text|Comment>;
                                      ^^^^^^^^ [9]
   <BUILTINS>/dom.js:884:31
   884|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 389, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Document|Element|Text|Comment>;
                                      ^^^^^^^^ [10]
   <BUILTINS>/dom.js:885:31
   885|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 512, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType>;
                                      ^^^^^^^^ [11]
   <BUILTINS>/dom.js:886:31
   886|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 513, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element>;
                                      ^^^^^^^^ [12]
   <BUILTINS>/dom.js:887:31
   887|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 516, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Text>;
                                      ^^^^^^^^ [13]
   <BUILTINS>/dom.js:888:31
   888|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 517, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Text>;
                                      ^^^^^^^^ [14]
   <BUILTINS>/dom.js:889:31
   889|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 640, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Comment>;
                                      ^^^^^^^^ [15]
   <BUILTINS>/dom.js:890:31
   890|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 641, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Comment>;
                                      ^^^^^^^^ [16]
   <BUILTINS>/dom.js:891:31
   891|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 644, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Text|Comment>;
                                      ^^^^^^^^ [17]
   <BUILTINS>/dom.js:892:31
   892|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 645, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Element|Text|Comment>;
                                      ^^^^^^^^ [18]
   <BUILTINS>/dom.js:893:31
   893|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 768, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document>;
                                      ^^^^^^^^ [19]
   <BUILTINS>/dom.js:894:31
   894|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 769, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element>;
                                      ^^^^^^^^ [20]
   <BUILTINS>/dom.js:895:31
   895|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 772, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Text>;
                                      ^^^^^^^^ [21]
   <BUILTINS>/dom.js:896:31
   896|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 773, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Text>;
                                      ^^^^^^^^ [22]
   <BUILTINS>/dom.js:897:31
   897|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 896, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Comment>;
                                      ^^^^^^^^ [23]
   <BUILTINS>/dom.js:898:31
   898|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 897, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Comment>;
                                      ^^^^^^^^ [24]
   <BUILTINS>/dom.js:899:31
   899|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 900, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Text|Comment>;
                                      ^^^^^^^^ [25]
   <BUILTINS>/dom.js:900:31
   900|   createTreeWalker<RootNodeT: Document>(root: RootNodeT, whatToShow: 901, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentType|Document|Element|Text|Comment>;
                                      ^^^^^^^^ [26]
   <BUILTINS>/dom.js:912:31
   912|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1024, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment>;
                                      ^^^^^^^^^^^^^^^^ [27]
   <BUILTINS>/dom.js:913:31
   913|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1025, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element>;
                                      ^^^^^^^^^^^^^^^^ [28]
   <BUILTINS>/dom.js:914:31
   914|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1028, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Text>;
                                      ^^^^^^^^^^^^^^^^ [29]
   <BUILTINS>/dom.js:915:31
   915|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1029, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Text>;
                                      ^^^^^^^^^^^^^^^^ [30]
   <BUILTINS>/dom.js:916:31
   916|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1152, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Comment>;
                                      ^^^^^^^^^^^^^^^^ [31]
   <BUILTINS>/dom.js:917:31
   917|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1153, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Comment>;
                                      ^^^^^^^^^^^^^^^^ [32]
   <BUILTINS>/dom.js:918:31
   918|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1156, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Text|Comment>;
                                      ^^^^^^^^^^^^^^^^ [33]
   <BUILTINS>/dom.js:919:31
   919|   createTreeWalker<RootNodeT: DocumentFragment>(root: RootNodeT, whatToShow: 1157, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, DocumentFragment|Element|Text|Comment>;
                                      ^^^^^^^^^^^^^^^^ [34]
   <BUILTINS>/dom.js:931:31
   931|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element>;
                                      ^^^^ [35]
   <BUILTINS>/dom.js:932:31
   932|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text>;
                                      ^^^^ [36]
   <BUILTINS>/dom.js:933:31
   933|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Text>;
                                      ^^^^ [37]
   <BUILTINS>/dom.js:934:31
   934|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Comment>;
                                      ^^^^ [38]
   <BUILTINS>/dom.js:935:31
   935|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Comment>;
                                      ^^^^ [39]
   <BUILTINS>/dom.js:936:31
   936|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Comment>;
                                      ^^^^ [40]
   <BUILTINS>/dom.js:937:31
   937|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Element|Comment>;
                                      ^^^^ [41]
   <BUILTINS>/dom.js:942:31
   942|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow?: number, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Node>;
                                      ^^^^ [42]


Error ---------------------------------------------------------------------------------------------- traversal.js:186:52

Cannot call `document.createNodeIterator` with function bound to `filter` because string [1] is incompatible with
enum [2] in the return value.

   traversal.js:186:52
    186|     document.createNodeIterator(document_body, -1, node => 'accept'); // invalid
                                                            ^^^^^^^^^^^^^^^^

References:
   traversal.js:186:60
    186|     document.createNodeIterator(document_body, -1, node => 'accept'); // invalid
                                                                    ^^^^^^^^ [1]
   <BUILTINS>/dom.js:3197:1
         v--------------------------------
   3197| typeof NodeFilter.FILTER_ACCEPT |
   3198| typeof NodeFilter.FILTER_REJECT |
   3199| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ---------------------------------------------------------------------------------------------- traversal.js:188:52

Cannot call `document.createNodeIterator` with object literal bound to `filter` because string [1] is incompatible with
enum [2] in the return value of property `acceptNode`.

   traversal.js:188:52
    188|     document.createNodeIterator(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   traversal.js:188:74
    188|     document.createNodeIterator(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                                                  ^^^^^^^^ [1]
   <BUILTINS>/dom.js:3197:1
         v--------------------------------
   3197| typeof NodeFilter.FILTER_ACCEPT |
   3198| typeof NodeFilter.FILTER_REJECT |
   3199| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ----------------------------------------------------------------------------------------------- traversal.js:189:5

Cannot call `document.createNodeIterator` because:
 - Either number [1] is incompatible with number literal `1` [2].
 - Or number [1] is incompatible with number literal `4` [3].
 - Or number [1] is incompatible with number literal `5` [4].
 - Or number [1] is incompatible with number literal `128` [5].
 - Or number [1] is incompatible with number literal `129` [6].
 - Or number [1] is incompatible with number literal `132` [7].
 - Or number [1] is incompatible with number literal `133` [8].

   traversal.js:189:5
   189|     document.createNodeIterator(document_body, -1, {}); // invalid
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   traversal.js:189:48
   189|     document.createNodeIterator(document_body, -1, {}); // invalid
                                                       ^^ [1]
   <BUILTINS>/dom.js:924:68
   924|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element>;
                                                                           ^ [2]
   <BUILTINS>/dom.js:925:68
   925|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text>;
                                                                           ^ [3]
   <BUILTINS>/dom.js:926:68
   926|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Text>;
                                                                           ^ [4]
   <BUILTINS>/dom.js:927:68
   927|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Comment>;
                                                                           ^^^ [5]
   <BUILTINS>/dom.js:928:68
   928|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Element|Comment>;
                                                                           ^^^ [6]
   <BUILTINS>/dom.js:929:68
   929|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Comment>;
                                                                           ^^^ [7]
   <BUILTINS>/dom.js:930:68
   930|   createNodeIterator<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface): NodeIterator<RootNodeT, Text|Element|Comment>;
                                                                           ^^^ [8]


Error ---------------------------------------------------------------------------------------------- traversal.js:193:50

Cannot call `document.createTreeWalker` with function bound to `filter` because string [1] is incompatible with enum [2]
in the return value.

   traversal.js:193:50
    193|     document.createTreeWalker(document_body, -1, node => 'accept'); // invalid
                                                          ^^^^^^^^^^^^^^^^

References:
   traversal.js:193:58
    193|     document.createTreeWalker(document_body, -1, node => 'accept'); // invalid
                                                                  ^^^^^^^^ [1]
   <BUILTINS>/dom.js:3197:1
         v--------------------------------
   3197| typeof NodeFilter.FILTER_ACCEPT |
   3198| typeof NodeFilter.FILTER_REJECT |
   3199| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ---------------------------------------------------------------------------------------------- traversal.js:195:50

Cannot call `document.createTreeWalker` with object literal bound to `filter` because string [1] is incompatible with
enum [2] in the return value of property `acceptNode`.

   traversal.js:195:50
    195|     document.createTreeWalker(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   traversal.js:195:72
    195|     document.createTreeWalker(document_body, -1, { acceptNode: node => 'accept' }); // invalid
                                                                                ^^^^^^^^ [1]
   <BUILTINS>/dom.js:3197:1
         v--------------------------------
   3197| typeof NodeFilter.FILTER_ACCEPT |
   3198| typeof NodeFilter.FILTER_REJECT |
   3199| typeof NodeFilter.FILTER_SKIP;
         ----------------------------^ [2]


Error ----------------------------------------------------------------------------------------------- traversal.js:196:5

Cannot call `document.createTreeWalker` because:
 - Either number [1] is incompatible with number literal `1` [2].
 - Or number [1] is incompatible with number literal `4` [3].
 - Or number [1] is incompatible with number literal `5` [4].
 - Or number [1] is incompatible with number literal `128` [5].
 - Or number [1] is incompatible with number literal `129` [6].
 - Or number [1] is incompatible with number literal `132` [7].
 - Or number [1] is incompatible with number literal `133` [8].

   traversal.js:196:5
   196|     document.createTreeWalker(document_body, -1, {}); // invalid
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   traversal.js:196:46
   196|     document.createTreeWalker(document_body, -1, {}); // invalid
                                                     ^^ [1]
   <BUILTINS>/dom.js:931:66
   931|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 1, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element>;
                                                                         ^ [2]
   <BUILTINS>/dom.js:932:66
   932|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 4, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text>;
                                                                         ^ [3]
   <BUILTINS>/dom.js:933:66
   933|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 5, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Text>;
                                                                         ^ [4]
   <BUILTINS>/dom.js:934:66
   934|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 128, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Comment>;
                                                                         ^^^ [5]
   <BUILTINS>/dom.js:935:66
   935|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 129, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Element|Comment>;
                                                                         ^^^ [6]
   <BUILTINS>/dom.js:936:66
   936|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 132, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Comment>;
                                                                         ^^^ [7]
   <BUILTINS>/dom.js:937:66
   937|   createTreeWalker<RootNodeT: Node>(root: RootNodeT, whatToShow: 133, filter?: NodeFilterInterface, entityReferenceExpansion?: boolean): TreeWalker<RootNodeT, Text|Element|Comment>;
                                                                         ^^^ [8]



Found 29 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
